import java.util.Calendar;

public class Action {
	String name;
	String type;
	int id;
	Calendar start;
	Calendar end;

	public Action () {
		this.name = "bob";
	}

	public int duration(Action a) {
		return 0;
	})
}

/*
 * UML Diagram (s) below 'Class Diagram
 * 
 * @startuml
 * 
 * 
 * VenueHireSystem o-- Action 
 * VenueHireSystem *-- Venue
 *  Venue *-- Room
 * 
 * Request<|-- Change
 *  Cancel<|-- Change
 * 
 * Action ..|> Request
 *  Action ..|> Cancel
 *   Action --> Room
 * 
 * DateData --* Room
 *  DateData *-- CustomDate
 *   skinparam classAttributeIconSize 0
 * 
 * class Room {
 *  -String name
 *  -String type
 *  -DateData availabilities +
 * <<constructor>> Room(name:String, type:String, availabilities:DateData) 
 * + * isAvailable(date:String) : Boolean 
 * + bookRoom(date:String) : String 
 * + * freeRoom(date:String) : String 
 * - setName(name: String) 
 * - setType(type: * String) + getName() : String + getType() : String 
 * }
 * 
 * class Venue {
 *  -List<Room> rooms 
 *  -String name 
 *  + <<constructor>> Venue(room: * List<Room>, name:String) 
 *  + isAvailable(date:String) : Boolean 
 *  + * bookRoom(date:String) : String 
 *  + freeRoom(date:String) : String
 *  -setName(name: String) 
 *  - setType(type: String) 
 * + getName() : String
 * + * getType() : String 
 * }
 * 
 * class Action { 
 * -String name 
 * -String type 
 * -int id 
 * -Calendar start
 * -Calendar end
 * +duration(start:CustomDate, end:CustomDate): int
 * + <<constructor>> Action() + setters() and * getters() 
 * }
 * 
 * class VenueHireSystem { 
 * -Venue[] venues 
 * -Action[] actions 
 * - scanInput() : * String 
 * - venueParse(input:String) 
 * - actionParse(input:String) -
 * printOutput(): String 
 * -setters() and +getters() 
 * + <<constructor>> VenueHireSystem(roomReq: List<Room>, name:String, type:String, id:int, dateRequired:String[])
 *  }
 * 
 * class DateData { 
 * -CustomDate[] bookedDates 
 * +<<constructor>> DateData()
 * +Boolean getDate() 
 * +isAvailable(date:CustomDate) 
 * }
 * 
 * class CustomDate { 
 * -String month 
 * -int day 
 * +equals() 
 * }
 * 
 * 
 * @enduml 'Use cases
 * 
 * @startuml :User: (Request reservation) User --> (Request)
 * 
 * User --> (Change)
 * 
 * User --> (Cancel)
 * 
 * @enduml
 * 
 */